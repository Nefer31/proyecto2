library(R6)
campeonato <- R6Class(
classname = "campeonato",
private = list(
carreras = NULL,
autos = NULL
),
public = list(
initialize = function(){
private$carreras <- list()
private$autos <- list()
},
inscribirAuto = function(carro){
if(!(carro %in% private$autos)){
private$autos <- c(private$autos, carro)
return(TRUE)
}
return(FALSE)
},
registrarCarrera = function(carrera){
if(!(carrera %in% private$carreras)){
private$carreras <- c(private$carreras, carrera)
}
},
getCarreras = function() {
private$carreras
},
getCarros = function(){
private$carros
},
buscarCarro = function(nombreDelCarro) {
for (i in seq_along(private$autos)) {
if (nombreDelCarro == private$autos[[i]]$getNombre()) {
return(private$autos[[i]])
}
}
return(NULL)
}
)
)
library(R6)
library(R6)
Carrera <- R6Class(
classname = "Carrera",
private = list(
carros = NULL,
nombre = NULL,
tipoDePista = NULL
),
public = list(
initialize = function(nombre, tipoDePista) {
if (tipoDePista %in% c("rally", "f1")) {
private$nombre <- nombre
private$tipoDePista <- tipoDePista
private$carros <- list()
} else {
stop("Tipo de pista inválido. Debe ser 'rally' o 'f1'.")
}
},
setNombre = function(nombre) {
private$nombre <- nombre
},
getNombre = function() {
return(private$nombre)
},
setTipoDePista = function(tipoDePista) {
if (tipoDePista %in% c("rally", "f1")) {
private$tipoDePista <- tipoDePista
} else {
stop("Tipo de pista inválido. Debe ser 'rally' o 'f1'.")
}
},
getTipoDePista = function() {
return(private$tipoDePista)
},
agregarCarro = function(carro) {
if (!(carro %in% private$carros)) {
private$carros <- c(private$carros, carro)
}
},
iniciarCarrera = function() {
ordenCarros <- order(sapply(private$carros, function(carro) carro$getVelocidad()), decreasing = TRUE)
for (i in seq_along(private$carros)) {
private$carros[[ordenCarros[i]]]$setPosicion(i)
}
},
registrarCarrera = function() {
puntos <- c(25, 18, 15, 12, 10, 8, 6, 4, 2)
for (i in seq_along(private$carros)) {
posicion <- i
if (posicion <= length(puntos)) {
private$carros[[i]]$setPuntos(private$carros[[i]]$getVelocidad() + puntos[posicion])
} else {
private$carros[[i]]$setPuntos(private$carros[[i]]$getVelocidad() + 0)
}
}
},
equals = function(otherCarrera) {
if (is(otherCarrera, "Carrera")) {
return(private$nombre == otherCarrera$getNombre())
}
return(FALSE)
},
getCarros = function() {
private$carros
}
)
)
library(R6)
carro <- R6Class(
classname = "Carro",
private = list(
nombre = NULL,
numero = NULL,
posicion = 0,
distancia = 0,
tiempoTotal = 0,
puntos = 0,
velocidad = NULL
),
public = list(
initialize = function(nombre, numero) {
private$nombre <- nombre
private$numero<- numero
},
randomNumber = function(min, max) {
return(floor(runif(1, min = min, max = max + 1)))
},
velocidadMaxima = function() {
numeroRandom <- randomNumber(1, 100)
private$setVelocidad(numeroRandom)
},
setNombre = function(nombre) {
private$nombre <- nombre
},
getNombre = function() {
return(private$nombre)
},
setPosicion = function(posicion) {
private$posicion <- posicion
},
getPosicion = function() {
return(private$posicion)
},
setPuntos = function(puntos) {
private$puntos <- puntos
},
getPuntos = function() {
return(private$puntos)
},
setVelocidad = function(velocidad) {
private$velocidad <- velocidad
},
getVelocidad = function() {
return(private$velocidad)
},
equals = function(obj) {
return(
inherits(obj, "Carro") &&
private$nombre == obj$getNombre()
)
}
)
)
library(R6)
CarroDeFormula1 <- R6Class(
classname = "CarroDeFormula1",
inherit = Carro,
public = list(
VELOCIDADEXTRA = 10,
initialize = function(nombre, numero) {
super$initialize(nombre, numero)
},
velocidadMaxima = function(carrera) {
tipoDePista <- carrera$getTipoDePista()
super$velocidadMaxima()
if (tipoDePista == "f1") {
velocidadActual <- private$getVelocidad()
private$setVelocidad(velocidadActual + VELOCIDADEXTRA)
}
}
)
)
library(R6)
CarroDeRally <- R6Class(
classname = "CarroDeRally",
inherit = Carro,
public = list(
velocidadExtra = 10,
initialize = function(nombre, numero) {
super$initialize(nombre, numero)
},
velocidadMaxima = function(carrera) {
tipoDePista <- carrera$getTipoDePista()
super$velocidadMaxima()
if (tipoDePista == "rally") {
velocidadActual <- private$getVelocidad()
private$setVelocidad(velocidadActual + velocidadExtra)
}
}
)
)
library(shiny); runApp('interfaz.R')
View(campeonato)
shiny::runApp('carreras')
runApp('carreras')
shiny::runApp('carreras')
runApp('carreras')
runApp('carreras')
shiny::runApp('carreras')
shiny::runApp()
shiny::runApp()
